<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop.xsd
    	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 开启注解 -->
    <context:annotation-config/>
    <!-- 自动扫描service包(自动注入) -->
    <context:component-scan base-package="com.he.modules.service"/>

    <context:property-placeholder location="classpath*:db.properties"/>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${db_driver}"/>
        <property name="jdbcUrl" value="${db_url}"/>
        <property name="user" value="${db_user}"/>
        <property name="password" value="${db_pwd}"/>
        <!--<property name="driverClass" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="jdbcUrl" value="jdbc:mysql://192.168.200.200:3306/movie_data"/>-->
        <!--<property name="user" value="root"/>-->
        <!--<property name="password" value="Heyongman123~"/>-->
        <!-- 连接池启动时的初始值 -->
        <!--<property name="initialSize" value="${initialSize}"/>-->
        <!-- 连接池的最大值 -->
        <!--<property name="maxActive" value="${maxActive}"/>-->
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <!--<property name="maxIdle" value="${maxIdle}"/>-->
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <!--<property name="minIdle" value="${minIdle}"/>-->

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <!--<property name="minEvictableIdleTimeMillis" value="25200000"/>-->

        <!-- 打开removeAbandoned功能 -->
        <!--<property name="removeAbandoned" value="true"/>-->
        <!-- 1800秒，也就是30分钟 -->
        <!--<property name="removeAbandonedTimeout" value="1800"/>-->
    </bean>

    <!-- 配置MyBatis session工厂 -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/he/modules/dao/*.xml" />
        <!-- 配置分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.he.modules.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory" />
    </bean>

    <!-- (事务管理)transaction manager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 指定所上传文件的总大小,单位字节。注意maxUploadSize属性的限制不是针对单个文件，而是当前请求的所有文件的容量之和 -->
        <!-- 10485760字节(b) == 10兆 -->
        <property name="maxUploadSize" value="1099511627776" />
    </bean>
    <!-- 第一种方式: 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 第二种方式:配置事物 -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes> <tx:method name="save*" /> <tx:method name="delete*" /> <tx:method
        name="find*" propagation="SUPPORTS" /> <tx:method name="*" propagation="SUPPORTS"
        /> </tx:attributes> </tx:advice> -->
    <!-- 事务控制位置，一般在业务层service -->
    <!-- 多个 expression="(execution(* com.weixin.web.service..*Impl.*(..)))or(execution(*
            org.weixin.service..*Impl.*(..)))" -->
    <!-- <aop:config>
        <aop:pointcut id="transactionPointcut"
            expression="execution(* com.zsx.web.service..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut"
            advice-ref="transactionAdvice" />
    </aop:config> -->
</beans>